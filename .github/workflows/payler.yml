---
name: "payler"

'on':
  push:
    branches:
      - main
      - develop
    tags:
      - "*"
  pull_request:
    branches:
      - main
      - develop

jobs:
  linter:
    name: "Lint code"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout Code"
        uses: "actions/checkout@v2"

      - name: "Setup Python Environment"
        uses: "actions/setup-python@v2"
        with:
          python-version: "3.x"
      - name: "Setup Poetry"
        uses: "Gr1N/setup-poetry@v4"
      - name: "Install package"
        run: "poetry install"
      - name: "Run linter"
        run: "poetry run pylint payler"
  tests:
    name: "Run unit tests"
    runs-on: "ubuntu-latest"
    services:
      mongo:
        image: "mongo:4.4"
        env:
          MONGO_INITDB_ROOT_USERNAME: payler
          MONGO_INITDB_ROOT_PASSWORD: secret
          MONGO_INITDB_DATABASE: payler
        ports:
          - "27017:27017"
      broker:
        image: "rabbitmq:3.8-management"
        env:
          RABBITMQ_DEFAULT_USER: payler
          RABBITMQ_DEFAULT_PASS: secret
          RABBITMQ_DEFAULT_VHOST: payler
        ports:
          - "5672:5672"
    steps:
      - name: "Checkout Code"
        uses: "actions/checkout@v2"

      - name: "Setup Python Environment"
        uses: "actions/setup-python@v2"
        with:
          python-version: "3.x"
      - name: "Setup Poetry"
        uses: "Gr1N/setup-poetry@v4"
      - name: "Install package"
        run: "poetry install"
      - name: "Run tests"
        run: "poetry run pytest"

  docker-image:
    name: "Publish docker image"
    runs-on: "ubuntu-latest"
    needs: tests
    steps:
      - name: "Checkout Code"
        uses: "actions/checkout@v2"
      - name: "Push to GitHub Packages"
        uses: "docker/build-push-action@v1"
        with:
          username: "${{ github.actor }}"
          password: "${{ secrets.CR_PAT }}"
          registry: ghcr.io
          repository: tbobm/payler
          tag_with_ref: true

  documentation:
    name: "Generate documentation"
    runs-on: "ubuntu-latest"
    # if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: "Checkout Code"
        uses: "actions/checkout@v2"
      - name: "Setup Python Environment"
        uses: "actions/setup-python@v2"
        with:
          python-version: "3.x"
      - name: "Install package"
        run: "pip install ."
      - name: "Install dev dependencies"
        run: "pip install -r requirements-doc.txt"
      - name: "Generate documentation"
        run: "make html"
      - name: "Deploy to gh pages"
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GH_PAT  }}
          publish_dir: ./build/html/

  publish:
    name: "Publish to Pypi"
    runs-on: "ubuntu-latest"
    # TODO: Add linter after refactoring Drivers
    needs:
      - tests
        # - linter
    steps:
      - name: "Checkout Code"
        uses: "actions/checkout@v2"

      - name: "Setup Python Environment"
        uses: "actions/setup-python@v2"
        with:
          python-version: "3.x"
      - name: "Setup Poetry"
        uses: "Gr1N/setup-poetry@v4"
      - name: "Install package"
        run: "poetry install"
      - name: "Configure Poetry"
        run: "poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}"
      - name: "Publish package"
        run: "poetry publish --build"
